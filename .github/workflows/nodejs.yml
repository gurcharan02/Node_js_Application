name: Node.js CI
on:
  push:
    branches: [ "master" ]
    
env:
  AWS_REGION: us-west-2                  # set this to your preferred AWS region, e.g. us-west-1
  # ECR_REPOSITORY: demo-deploy          # set this to your Amazon ECR repository name
  # ECS_SERVICE: demo-deploy                # set this to your Amazon ECS service name
  # ECS_CLUSTER: demo-deploy                 # set this to your Amazon ECS cluster name
  # ECS_TASK_DEFINITION: .github/workflows/task-definition.json      # set this to the path to your Amazon ECS task definition                                           # file, e.g. .aws/task-definition.json
  # CONTAINER_NAME: demo-deploy           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Node.js
        run: |
          curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
          sudo apt-get install -y nodejs
          node --version
          npm --version
      - name: Install docker
        run: |
            sudo apt-get update -y
            sudo apt install docker.io -y 
            sudo usermod -aG docker $USER

  Installing_pm2_and_deploy_application:
   needs: [build]
   runs-on: self-hosted
   steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: PM2 installation & Verify
      run: |
        sudo npm install -g pm2
        pm2 --version || true
    - name: Stop existing PM2 processes
      run: |
        cd /home/ubuntu/actions-runner/_work/Node_js_Application/Node_js_Application
        pm2 delete all || true
    - name: Start application with PM2
      run: |
        cd /home/ubuntu/actions-runner/_work/Node_js_Application/Node_js_Application
        pm2 start index.js --name "my-node-app"
    - name: Check application status
      run: pm2 status
      
      
  Create_Docker_image:
   needs: [Installing_pm2_and_deploy_application]
   runs-on: self-hosted
   steps: 
     - name: Checkout code
       uses: actions/checkout@v3
     - name: build image
       run: |           
            sudo docker build /home/ubuntu/actions-runner/_work/Node_js_Application/Node_js_Application --tag my-node-app1
     - name: check docker images
       run: |           
           docker images
  Configure_aws:
   needs: [Create_Docker_image]
   runs-on: self-hosted
   steps:      
     - name: Configure AWS credentials
       run: |
          sudo apt install awscli -y
          aws --version
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-west-2  # Set your desired region
          aws s3 ls
     
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#         role-to-assume: arn:aws:iam::340704870584:role/Github
#         role-session-name: Github
#         aws-region: ${{ env.AWS_REGION }}
        
     - name: Login to Amazon ECR
       run: |
          aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 340704870584.dkr.ecr.us-west-2.amazonaws.com
          
     - name: Pull Docker Image from Jfrog 
       run: |
          docker pull arintech01.jfrog.io/my-jfrog-repository/my-node-app:latest
          
          
          
